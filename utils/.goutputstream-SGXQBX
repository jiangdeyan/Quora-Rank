import time
import math 





# Only available for lines with a pair of quotation marks
def trimQuote(line):
	index_s = line.find("\"")
	if index_s != -1:
		index_e = line[index_s+1:].find("\"")
		if index_e != -1:
			ret = line[index_s+1: index_e+index_s+1]
			return ret
	else: 
		return line
	


#to abstract necessary params from the first Page
class FirstQuestionPage:
	def __init__(self,content):
		for line in content:
			#  http get params
			if line.find('require("tchannel_up").start') != -1:
				index_s = line.find('start(')
				index_e = line.find(');')
				if index_s != -1:
					sub =  line[len('start(')+index_s : index_e]
					params = sub.split(",")
					for i in range(len(params)):
						params[i] = trimQuote(params[i])
						self.params = params
			# http post severCallUrl
			if line.find("serverCallUrl: ") != -1:
				self.serverCallUrl = trimQuote(line)
			
			if line.find("formkey: ") != -1:
				self.formkey = trimQuote(line)

			if line.find("postkey: ") != -1:
				self.postkey = trimQuote(line)
		print self.params
		print self.formkey
		print self.postkey
		print self.serverCallUrl

	def getLoadParams(self):
		return self.params

	def getFormkey(self):
		return self.formkey

	def getPostKey(self):
		return self.postkey
	
	def getServerCallUrl(self):
		return self.serverCallUrl
						


		


